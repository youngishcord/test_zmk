#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/ext_power.h>

#define ZMK_MOUSE_DEFAULT_SCRL_VAL 50 // 10

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&led_strip {
    chain-length = <42>;
};

/ {
    behaviors {
        rgb_brightness_encoder: rgb_brightness_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRD>, <&rgb_ug RGB_BRI>;
        };
        rgb_hue_encoder: rgb_hue_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUD>, <&rgb_ug RGB_HUI>;
        };
        rgb_saturation_encoder: rgb_saturation_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_SAD>, <&rgb_ug RGB_SAI>;
        };
        page_encoder: page_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp PG_UP>, <&kp PG_DN>;
        };
        volume_encoder: volume_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_DN>, <&kp C_VOL_UP>;
        };
        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;
            tap-ms = <50>;
        };
        scale_adj: scale_adj {
            compatible = "zmk,behavior-scale-adjuster";
            #binding-cells = <0>;
            temp_multiplier = <3>; /* Temporary scale multiplier */
            temp_divisor = <1>; /* Temporary scale divisor */
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
//|------SW0-------|------SW1-------|------SW2-------|------SW3-------|------SW4-------|------SW5-------|------SW6-------|((((((RE7)))))))|......TS15......|<>|......TS8.......|((((((RE0)))))))|------SW1-------|------SW2-------|------SW3-------|------SW4-------|------SW5-------|------SW6-------|------SW7-------|
//|------SW8-------|------SW9-------|------SW10------|------SW11------|------SW12------|------SW13------|------SW14------|                |......TS23......|<>|......TS15......|                                 |------SW9-------|------SW10------|------SW11------|------SW12------|------SW13------|------SW14------|
//|------SW16------|------SW17------|------SW18------|------SW19------|------SW20------|------SW21------|------SW22------|((((((RE31))))))|                 <>                                                   |------SW16------|------SW17------|------SW18------|------SW19------|------SW20------|------SW21------|
//|------SW24------|------SW25------|------SW26------|------SW27------|------SW28------|------SW29------|                |~~~~~~TH30~~~~~~|~~~~~~TH38~~~~~~|<>|~~~~~~TH22~~~~~~|~~~~~~TH23~~~~~~|                |------SW24------|------SW25------|------SW26------|------SW27------|------SW28------|------SW29------|
//|------SW32------|------SW33------|------SW34------|------SW35------|                                 |~~~~~~~~~~~~~~TH36~~~~~~~~~~~~~~~|~~~~~~TH37~~~~~~|<>|~~~~~~TH30~~~~~~|~~~~~~TH31~~~~~~|~~~~~~TH32~~~~~~|                                 |------SW33------|------SW34------|------SW35------|------SW36------|
            bindings = <
  &kp ESC          &kp N1           &kp N2           &kp N3           &kp N4           &kp N5           &kp GRAVE        &kp C_MUTE       &rgb_ug RGB_ON      &rgb_ug RGB_EFF  &mkp MB5         &mkp MB3         &kp N6           &kp N7           &kp N8           &kp N9           &kp N0           &kp MINUS
  &kp TAB          &kp Q            &kp W            &kp E            &kp R            &kp T            &kp LBKT                          &rgb_ug RGB_OFF     &rgb_ug RGB_EFR                                    &kp Y            &kp U            &kp I            &kp O            &kp P            &kp EQUAL
  &kp BSPC         &kp A            &kp S            &kp D            &kp F            &kp G            &kp RBKT         &kp F5                                                                                  &kp H            &kp J            &kp K            &kp L            &kp SEMI         &kp APOS
  &kp LSHFT        &kp Z            &kp X            &kp C            &kp V            &kp B                             &kp HOME         &kp END             &mkp MB4         &mkp MB2                          &kp N            &kp M            &kp COMMA        &kp DOT          &kp FSLH         &kp BSLH
  &kp LCTRL        &kp LWIN         &kp LALT         &kp DEL                                            &kp SPACE                         &kp RET             &mkp MB1         &scale_adj       &mo 1                                              &kp LEFT         &kp UP           &kp DOWN         &kp RIGHT
            >;

            sensor-bindings = <&volume_encoder &page_encoder &scroll_encoder>;
        };
        
        function_layer {
//|------SW0-------|------SW1-------|------SW2-------|------SW3-------|------SW4-------|------SW5-------|------SW6-------|((((((RE7)))))))|......TS15......|<>|......TS8.......|((((((RE0)))))))|------SW1-------|------SW2-------|------SW3-------|------SW4-------|------SW5-------|------SW6-------|------SW7-------|
//|------SW8-------|------SW9-------|------SW10------|------SW11------|------SW12------|------SW13------|------SW14------|                |......TS23......|<>|......TS15......|                                 |------SW9-------|------SW10------|------SW11------|------SW12------|------SW13------|------SW14------|
//|------SW16------|------SW17------|------SW18------|------SW19------|------SW20------|------SW21------|------SW22------|((((((RE31))))))|                 <>                                                   |------SW16------|------SW17------|------SW18------|------SW19------|------SW20------|------SW21------|
//|------SW24------|------SW25------|------SW26------|------SW27------|------SW28------|------SW29------|                |~~~~~~TH30~~~~~~|~~~~~~TH38~~~~~~|<>|~~~~~~TH22~~~~~~|~~~~~~TH23~~~~~~|                |------SW24------|------SW25------|------SW26------|------SW27------|------SW28------|------SW29------|
//|------SW32------|------SW33------|------SW34------|------SW35------|                                 |~~~~~~~~~~~~~~TH36~~~~~~~~~~~~~~~|~~~~~~TH37~~~~~~|<>|~~~~~~TH30~~~~~~|~~~~~~TH31~~~~~~|~~~~~~TH32~~~~~~|                                 |------SW33------|------SW34------|------SW35------|------SW36------|
            bindings = <
  &none            &kp F1           &kp F2           &kp F3           &kp F4           &kp F5           &none            &kp F11          &bt BT_NXT          &bt BT_CLR       &none            &none            &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &kp BSPC
  &none            &none            &none            &none            &none            &none            &none                             &bt BT_PRV          &bt BT_CLR_ALL                                     &none            &none            &none            &none            &none            &kp RET
  &none            &kp LC(A)        &kp LC(S)        &kp LC(D)        &kp LC(F)        &none            &none            &kp F12                                                                                 &none            &none            &none            &none            &none            &none
  &none            &kp LC(Z)        &kp LC(X)        &kp LC(C)        &kp LC(V)        &none                             &none            &none               &kp LC(Z)        &kp LS(LC(Z))                     &none            &none            &none            &none            &none            &none
  &none            &none            &none            &none                                              &none                             &none               &none            &none            &trans                                             &kp LC(Z)        &rgb_ug RGB_SPD  &rgb_ug RGB_SPI  &kp LC(Y)
            >;

            sensor-bindings = <&rgb_brightness_encoder &rgb_saturation_encoder &rgb_hue_encoder>;
        };
    };
};