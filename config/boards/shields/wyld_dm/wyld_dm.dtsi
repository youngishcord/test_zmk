#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/led/led.h>


//wyld_dm_6x6 = <
//    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)               RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
//    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)               RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11)
//    RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)               RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11)
//    RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)               RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11)
//    RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5)               RC(4,6) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11)
//                    RC(5,2) RC(5,3)      RC(5,4) RC(5,5)      RC(5,6) RC(5,7)     RC(5,8) RC(5,9)
//                         RC(6,2) RC(6,3) RC(6,4) RC(6,5)      RC(6,6) RC(6,7) RC(6,8) RC(6,9)
//        >;
//
//wyld_dm_5x7 = <
//    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6)                     RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
//    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6)                     RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
//    RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(5,1)   RC(5, 10) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
//    RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6)                     RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)
//    RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4)                                                     RC(4,9) RC(4,10) RC(4,11) RC(4,12) RC(4,13)
//                                        RC(5,2) RC(5,3) RC(5,4)           RC(5,7) RC(5,8) RC(5,9)
//                                                RC(5,5) RC(5,6)
//        >;

/ {
    chosen {
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zephyr,display = &oled;
		zmk,underglow = &led_strip;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <14>;
        rows = <7>;
// | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  |                 | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |
// | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  |                 | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |
// | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 |                 | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |
// | SW24 | SW23 | SW22 | SW21 | SW20 | SW19 |                 | SW19 | SW20 | SW21 | SW22 | SW23 | SW24 |
// | SW30 | SW29 | SW28 | SW27 | SW26 | SW25 |                 | SW25 | SW26 | SW27 | SW28 | SW29 | SW30 |

  //#   5x7 with encoders
//        map = <
//    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6)                     RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
//    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6)                     RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
//    RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(5,1)   RC(5, 10) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
//    RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6)                     RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)
//    RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4)                                                     RC(4,9) RC(4,10) RC(4,11) RC(4,12) RC(4,13)
//                                        RC(5,2) RC(5,3) RC(5,4)           RC(5,7) RC(5,8) RC(5,9)
//                                                RC(5,5) RC(5,6)
//        >;

//                map = <
//
//    RC(1,5) RC(1,4) RC(1,3) RC(1,2) RC(1,1) RC(1,0)                      RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12)
//    RC(2,5) RC(2,4) RC(2,3) RC(2,2) RC(2,1) RC(2,0)                      RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12)
//    RC(3,5) RC(3,4) RC(3,3) RC(3,2) RC(3,1) RC(3,0) RC(0,6)    RC(0,13)  RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12)
//    RC(4,5) RC(4,4) RC(4,3) RC(4,2) RC(4,1) RC(4,0)                      RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11) RC(4,12)
//                                      RC(0,0) RC(0,1)                  RC(0,7)
//                                        RC(0,5) RC(0,2)                RC(0,8)
//                                          RC(0,4) RC(0,3)     RC(0,10) RC(0,9)
//        >;


            // RC(5,5)  AND RC(4,10) ARE IS THE ENCODERS!
                map = <
    RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) 						RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12) RC(0,13)
    RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) 						RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12) RC(1,13)
    RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) 						RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12) RC(2,13)
    RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(5,0) 	   RC(5,13) RC(3,7) RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12) RC(3,13)
    RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) 						RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11) RC(4,12) RC(4,13)
    RC(6,2) RC(5,1) RC(5,2) RC(5,3) RC(5,4)              										    RC(5,9) RC(5,10) RC(5,11) RC(5,12) RC(6,7)
                            RC(6,3) RC(6,4) RC(6,5) RC(6,6)             			RC(6,11) RC(6,10) RC(6,9) RC(6,8)

        >;
    };


    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
//        label = "KSCAN";
        diode-direction = "row2col";

		// expander pins
		row-gpios
		= <&expander 15 (GPIO_ACTIVE_LOW)>  // pin B0 on these expanders may not work.55555555
		, <&expander 9 (GPIO_ACTIVE_LOW)>
		, <&expander 10 (GPIO_ACTIVE_LOW)>
		, <&expander 11 (GPIO_ACTIVE_LOW)>
		, <&expander 12 (GPIO_ACTIVE_LOW)>
		, <&expander 13 (GPIO_ACTIVE_LOW)>
		, <&expander 14 (GPIO_ACTIVE_LOW)>
		;


        // PILLBUG PINS
//        row-gpios
//			= <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // PB1  / 1.11
//			, <&gpio0 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // PB0  / 1.09
//			, <&gpio1 15 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // PA4  / 1.11
//			, <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // PA3  / 0.31
//            , <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // PA2  / 1.15
//			, <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // PA1  / 0.29
//            ;

        // NANO V2 PINS
//        row-gpios
//            = <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 0.9
//			, <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 0.9
//            , <&gpio1 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 1.07
//			, <&gpio1 02 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 1.02
//        	, <&gpio1 01 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 1.01
//            ;

//        // NANO V2 PINS
//        row-gpios
//			= <&gpio1 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 1.13
//			, <&gpio1 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 1.11
//			, <&gpio0 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 0.10
//			, <&gpio0 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // 0.9
////            , <&gpio0 31 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // PA2  / 1.15
////			, <&gpio0 29 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>  // PA1  / 0.29
//            ;

    };

    left_encoder: encoder_left {
		compatible = "alps,ec11";
//		label = "LEFT_ENCODER";
		a-gpios = <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <60>;
		status = "disabled";
	};

	right_encoder: encoder_right {
		compatible = "alps,ec11";
//		label = "RIGHT_ENCODER";
		a-gpios = <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		b-gpios = <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
		steps = <60>;
		status = "disabled";
	};

    sensors: sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder>, <&right_encoder>;
        triggers-per-rotation = <15>;
    };
};

&pinctrl {
//	spi1_default: spi1_default {
//		group1 {
//			psels = <NRF_PSEL(SPIM_SCK, 0, 6)>,
//					<NRF_PSEL(SPIM_MOSI, 0, 8)>,
//					<NRF_PSEL(SPIM_MISO, 0, 8)>;
//		};
//	};
//
//	spi1_sleep: spi1_sleep {
//		group1 {
//			psels = <NRF_PSEL(SPIM_SCK, 0, 6)>,
//					<NRF_PSEL(SPIM_MOSI, 0, 8)>,
//					<NRF_PSEL(SPIM_MISO, 0, 8)>;
//			low-power-enable;
//		};
//	};

	spi3_default: spi3_default {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 25)>,
					<NRF_PSEL(SPIM_MOSI, 0, 11)>;
		};
	};

	spi3_sleep: spi3_sleep {
		group1 {
			psels = <NRF_PSEL(SPIM_SCK, 0, 25)>,
					<NRF_PSEL(SPIM_MOSI, 0, 11)>;
			low-power-enable;
		};
	};
};

#define INPUT_EV_KEY 0x01               /**< Key event */
#define INPUT_EV_REL 0x02               /**< Relative coordinate event */
#define INPUT_EV_ABS 0x03               /**< Absolute coordinate event */
#define INPUT_EV_MSC 0x04               /**< Miscellaneous event */
#define INPUT_EV_VENDOR_START 0xf0      /**< Vendor specific event start */
#define INPUT_EV_VENDOR_STOP 0xff       /**< Vendor specific event stop */

#define INPUT_REL_X 0x00                /**< Relative X coordinate */
#define INPUT_REL_Y 0x01                /**< Relative Y coordinate */
#define INPUT_REL_WHEEL 0x08            /**< Relative wheel coordinate */
#define INPUT_REL_HWHEEL 0x06           /**< Relative horizontal wheel coordinate */
#define INPUT_REL_MISC 0x09             /**< Relative misc coordinate */

//&spi1 {
//	compatible = "nordic,nrf-spim";
//	status = "okay";
//
//	pinctrl-0 = <&spi1_default>;
//	pinctrl-1 = <&spi1_sleep>;
//	pinctrl-names = "default", "sleep";
//	cs-gpios = <&gpio0 31 GPIO_ACTIVE_LOW>;
//
//	trackball: trackball@0 {
//		status = "okay";
//		compatible = "pixart,pmw3610";
//		reg = <0>;
//		spi-max-frequency = <2000000>;
//		irq-gpios = <&gpio0 29 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
//		cpi = <600>;
//		evt-type = <INPUT_EV_REL>;
//		x-input-code = <INPUT_REL_X>;
//		y-input-code = <INPUT_REL_Y>;
//	};

//	expander: mcp23sxx@0 {
//		compatible = "microchip,mcp23sxx";
//		status = "okay";
//		gpio-controller;
//		spi-max-frequency = <800000>;
//		reg = <0>;
//		//        label = "MCP23S17";
//		#gpio-cells = <2>;
//		ngpios = <16>;
//		int-gpios = <&gpio1 15 GPIO_ACTIVE_LOW>;
//	};
//};

&spi3 {
	compatible = "nordic,nrf-spim";
	status = "okay";

	pinctrl-0 = <&spi3_default>;
	pinctrl-1 = <&spi3_sleep>;
	pinctrl-names = "default", "sleep";

	led_strip: ws2812@0 {
		compatible = "worldsemi,ws2812-spi";

		/* SPI */
		reg = <0>; /* ignored, but necessary for SPI bindings */
		spi-max-frequency = <4000000>;

		/* WS2812 */
		chain-length = <88>; /* number of LEDs */
		spi-one-frame = <0x70>;
		spi-zero-frame = <0x40>;
		color-mapping = <LED_COLOR_ID_GREEN
						 LED_COLOR_ID_RED
						 LED_COLOR_ID_BLUE>;
	};
};

//nice_view_spi: &spi0 {
//    compatible = "nordic,nrf-spim";
//    pinctrl-0 = <&spi0_default>;
//    pinctrl-1 = <&spi0_sleep>;
//    pinctrl-names = "default", "sleep";
//    cs-gpios = <&gpio1 0 GPIO_ACTIVE_HIGH>;
//};

/// {
//	pmw3610_listener {
//		compatible = "zmk,input-listener";
//		device = <&trackball>;
//	};
//};


&pro_micro_i2c {
	status = "okay";

	oled: ssd1306@3c {
		compatible = "solomon,ssd1306fb";
		reg = <0x3c>;
//		label = "DISPLAY";
		width = <128>;
		height = <32>;
		segment-offset = <0>;
		page-offset = <0>;
		display-offset = <0>;
		multiplex-ratio = <31>;
		segment-remap;
		com-invdir;
		com-sequential;
		prechargep = <0x22>;
	};
};